# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: INTEGRATION

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  integration:
    name: Full integration with ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}  

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        node-version: [16.x]
        os: [ubuntu-latest]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    # Initialize
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2      
      with:        
        node-version: ${{ matrix.node-version }}
        cache: 'npm'        
        cache-dependency-path: client/package.json

    - name: Create reports directory
      run: mkdir dist && mkdir dist/reports
      working-directory: ${{github.workspace}}/client

    # Build       
    - name: Install dependency
      run: npm ci
      working-directory: ${{github.workspace}}/client

    - name: Prettier
      run: npm run prettier
      working-directory: ${{github.workspace}}/client
    
    - name: Dependency audit
      uses: oke-py/npm-audit-action@v1.8.2 > ./dist/reports/dependency-audit.txt
      with:
        working_directory: ${{github.workspace}}/client

    - name: Es lint
      run: npm run lint:eslint && npm run lint:stylelint
      working-directory: ${{github.workspace}}/client

    - name: Style lint
      run: npm run lint:stylelint
      working-directory: ${{github.workspace}}/client

    - name: Archive Analyses reports
      uses: actions/upload-artifact@v2
      with:
        name: Simulation-Analyses
        path: ${{github.workspace}}/client/dist/reports
    
    - name: Build
      run: npm run build
      working-directory: ${{github.workspace}}/client

    - name: Archive IHM
      uses: actions/upload-artifact@v2
      with:
        name: Simulation-IHM
        path: ${{github.workspace}}/client/build

    # Sonar
    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v3

    - name: Run SonarQube
      env:
        GITHUB_TOKEN: ${{ secrets.SONAR_REPO_ACCESS_TOKEN }}
      run: sonar-scanner
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
        -Dsonar.verbose=false

    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
